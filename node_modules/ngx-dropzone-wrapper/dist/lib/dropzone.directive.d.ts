import { OnInit, DoCheck, OnChanges, OnDestroy } from '@angular/core';
import { NgZone, EventEmitter, ElementRef, Renderer, SimpleChanges, KeyValueDiffers } from '@angular/core';
import { DropzoneConfig, DropzoneConfigInterface } from './dropzone.interfaces';
export declare class DropzoneDirective implements OnInit, DoCheck, OnChanges, OnDestroy {
    private zone;
    private renderer;
    private elementRef;
    private differs;
    private defaults;
    dropzone: any;
    private configDiff;
    disabled: boolean;
    runInsideAngular: boolean;
    config: DropzoneConfigInterface;
    useDropzoneClass: boolean;
    DZ_DROP: EventEmitter<any>;
    DZ_DRAGSTART: EventEmitter<any>;
    DZ_DRAGEND: EventEmitter<any>;
    DZ_DRAGENTER: EventEmitter<any>;
    DZ_DRAGOVER: EventEmitter<any>;
    DZ_DRAGLEAVE: EventEmitter<any>;
    DZ_ADDEDFILE: EventEmitter<any>;
    DZ_REMOVEDFILE: EventEmitter<any>;
    DZ_THUMBNAIL: EventEmitter<any>;
    DZ_ERROR: EventEmitter<any>;
    DZ_PROCESSING: EventEmitter<any>;
    DZ_UPLOADPROGRESS: EventEmitter<any>;
    DZ_SENDING: EventEmitter<any>;
    DZ_SUCCESS: EventEmitter<any>;
    DZ_COMPLETE: EventEmitter<any>;
    DZ_CANCELED: EventEmitter<any>;
    DZ_MAXFILESREACHED: EventEmitter<any>;
    DZ_MAXFILESEXCEEDED: EventEmitter<any>;
    DZ_PROCESSINGMULTIPLE: EventEmitter<any>;
    DZ_SENDINGMULTIPLE: EventEmitter<any>;
    DZ_SUCCESSMULTIPLE: EventEmitter<any>;
    DZ_COMPLETEMULTIPLE: EventEmitter<any>;
    DZ_CANCELEDMULTIPLE: EventEmitter<any>;
    DZ_TOTALUPLOADPROGRESS: EventEmitter<any>;
    DZ_RESET: EventEmitter<any>;
    DZ_QUEUECOMPLETE: EventEmitter<any>;
    constructor(zone: NgZone, renderer: Renderer, elementRef: ElementRef, differs: KeyValueDiffers, defaults: DropzoneConfig);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    reset(): void;
}
