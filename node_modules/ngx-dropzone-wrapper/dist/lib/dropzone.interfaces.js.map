{"version":3,"sources":["../../src/lib/dropzone.interfaces.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,mCAAqC;AAErC,wCAAwC;AAE3B,QAAA,cAAc,GAAG;IAC5B,MAAM;IACN,WAAW;IACX,SAAS;IACT,WAAW;IACX,UAAU;IACV,WAAW;IAEX,WAAW;IACX,aAAa;IACb,WAAW;IACX,OAAO;IACP,YAAY;IACZ,gBAAgB;IAChB,SAAS;IACT,SAAS;IACT,UAAU;IACV,UAAU;IACV,iBAAiB;IACjB,kBAAkB;IAElB,oBAAoB;IACpB,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,kBAAkB;IAElB,qBAAqB;IACrB,OAAO;IACP,eAAe;CAChB,CAAC;AAEF;IAAqC,mCAAQ;IAA7C;;IAEA,CAAC;IADQ,4BAAY,GAAG,KAAK,CAAC;IAC9B,sBAAC;CAFD,AAEC,CAFoC,QAAQ,GAE5C;AAFY,0CAAe;AAwE5B;IAmEE,wBAAY,MAAoC;QAApC,uBAAA,EAAA,WAAoC;QAC9C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAEM,+BAAM,GAAb,UAAc,MAAoC;QAApC,uBAAA,EAAA,WAAoC;QAChD,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;IACH,qBAAC;AAAD,CA5EA,AA4EC,IAAA;AA5EY,wCAAc","file":"dropzone.interfaces.js","sourceRoot":"","sourcesContent":["import * as Dropzone from 'dropzone';\n\n// http://www.dropzonejs.com/#event-list\n\nexport const DropzoneEvents = [\n  'drop',\n  'dragstart',\n  'dragend',\n  'dragenter',\n  'dragover',\n  'dragleave',\n\n  'addedfile',\n  'removedfile',\n  'thumbnail',\n  'error',\n  'processing',\n  'uploadprogress',\n  'sending',\n  'success',\n  'complete',\n  'canceled',\n  'maxfilesreached',\n  'maxfilesexceeded',\n\n  'processingmultiple',\n  'sendingmultiple',\n  'successmultiple',\n  'completemultiple',\n  'canceledmultiple',\n\n  'totaluploadprogress',\n  'reset',\n  'queuecomplete'\n];\n\nexport class AngularDropzone extends Dropzone {\n  static autoDiscover = false;\n}\n\nexport interface DropzoneConfigInterface {\n  timeout?: number,\n\n  autoReset?: number,\n  errorReset?: number,\n  cancelReset?: number,\n\n  url?: string,\n  method?: string,\n\n  params?: Object,\n  headers?: Object,\n\n  init?: any,\n  accept?: any,\n  resize?: any,\n  fallback?: any,\n  renameFile?: any,\n  transformFile?: any,\n\n  withCredentials?: boolean,\n\n  previewsContainer?: any,\n  hiddenInputContainer?: any,\n\n  clickable?: string | string[] | boolean,\n  paramName?: string,\n  capture?: string,\n  maxFiles?: number,\n  maxFilesize?: number,\n  filesizeBase?: number,\n  acceptedFiles?: string,\n  forceFallback?: boolean,\n  addRemoveLinks?: boolean,\n  uploadMultiple?: boolean,\n  parallelUploads?: number,\n  resizeWidth?: number,\n  resizeHeight?: number,\n  resizeMethod?: string,\n  resizeQuality?: number,\n  resizeMimeType?: string,\n  thumbnailWidth?: number,\n  thumbnailHeight?: number,\n  thumbnailMethod?: string,\n  previewTemplate?: string,\n  autoQueue?: boolean,\n  autoProcessQueue?: boolean,\n  ignoreHiddenFiles?: boolean,\n  maxThumbnailFilesize?: number,\n  createImageThumbnails?: boolean,\n\n  dictFileSizeUnits?: any,\n\n  dictDefaultMessage?: string,\n  dictFallbackMessage?: string,\n\n  dictFileTooBig?: string,\n  dictResponseError?: string,\n  dictInvalidFileType?: string,\n\n  dictRemoveFile?: string,\n  dictCancelUpload?: string,\n  dictFallbackText?: string,\n  dictMaxFilesExceeded?: string,\n  dictRemoveFileConfirmation?: string,\n  dictCancelUploadConfirmation?: string\n}\n\nexport class DropzoneConfig implements DropzoneConfigInterface {\n  timeout: number;\n\n  autoReset: number;\n  errorReset: number;\n  cancelReset: number;\n\n  url: string;\n  method: string;\n\n  params: Object;\n  headers: Object;\n\n  init: any;\n  accept: any;\n  resize: any;\n  fallback: any;\n  renameFile: any;\n  transformFile: any;\n\n  withCredentials: boolean;\n\n  previewsContainer: any;\n  hiddenInputContainer: any;\n\n  clickable: string | string[] | boolean;\n  paramName: string;\n  capture: string;\n  maxFiles: number;\n  maxFilesize: number;\n  filesizeBase: number;\n  acceptedFiles: string;\n  forceFallback: boolean;\n  addRemoveLinks: boolean;\n  uploadMultiple: boolean;\n  parallelUploads: number;\n  resizeWidth: number;\n  resizeHeight: number;\n  resizeMethod: string;\n  resizeQuality: number;\n  resizeMimeType: string;\n  thumbnailWidth: number;\n  thumbnailHeight: number;\n  thumbnailMethod: string;\n  previewTemplate: string;\n  autoQueue: boolean;\n  autoProcessQueue: boolean;\n  ignoreHiddenFiles: boolean;\n  maxThumbnailFilesize: number;\n  createImageThumbnails: boolean;\n\n  dictFileSizeUnits: any;\n\n  dictDefaultMessage: string;\n  dictFallbackMessage: string;\n\n  dictFileTooBig: string;\n  dictResponseError: string;\n  dictInvalidFileType: string;\n\n  dictRemoveFile: string;\n  dictCancelUpload: string;\n  dictFallbackText: string;\n  dictMaxFilesExceeded: string;\n  dictRemoveFileConfirmation: string;\n  dictCancelUploadConfirmation: string;\n\n  constructor(config: DropzoneConfigInterface = {}) {\n    this.assign(config);\n  }\n\n  public assign(config: DropzoneConfigInterface = {}) {\n    for (const key in config) {\n      this[key] = config[key];\n    }\n  }\n}\n"]}