import { NgZone, Renderer, SimpleChanges, KeyValueDiffers } from '@angular/core';
import { EventEmitter, ElementRef } from '@angular/core';
import { DropzoneConfig, DropzoneConfigInterface } from './dropzone.interfaces';
export declare class DropzoneDirective {
    private zone;
    private renderer;
    private elementRef;
    private differs;
    private defaults;
    private dropzone;
    private configDiff;
    disabled: boolean;
    runInsideAngular: boolean;
    config: DropzoneConfigInterface;
    dz_drop: EventEmitter<any>;
    dz_dragstart: EventEmitter<any>;
    dz_dragend: EventEmitter<any>;
    dz_dragenter: EventEmitter<any>;
    dz_dragover: EventEmitter<any>;
    dz_dragleave: EventEmitter<any>;
    dz_addedfile: EventEmitter<any>;
    dz_removedfile: EventEmitter<any>;
    dz_thumbnail: EventEmitter<any>;
    dz_error: EventEmitter<any>;
    dz_processing: EventEmitter<any>;
    dz_uploadprogress: EventEmitter<any>;
    dz_sending: EventEmitter<any>;
    dz_success: EventEmitter<any>;
    dz_complete: EventEmitter<any>;
    dz_canceled: EventEmitter<any>;
    dz_maxfilesreached: EventEmitter<any>;
    dz_maxfilesexceeded: EventEmitter<any>;
    dz_processingmultiple: EventEmitter<any>;
    dz_sendingmultiple: EventEmitter<any>;
    dz_successmultiple: EventEmitter<any>;
    dz_completemultiple: EventEmitter<any>;
    dz_canceledmultiple: EventEmitter<any>;
    dz_totaluploadprogress: EventEmitter<any>;
    dz_reset: EventEmitter<any>;
    dz_queuecomplete: EventEmitter<any>;
    constructor(zone: NgZone, renderer: Renderer, elementRef: ElementRef, differs: KeyValueDiffers, defaults: DropzoneConfig);
    ngOnInit(): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    reset(): void;
}
